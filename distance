#include<opencv2\opencv.hpp>
#include<math.h>
#include <iostream>
using namespace cv;
using namespace std;
int value=0;
int value_max = 200;
int value_c;
void distance(Mat bluematting, int value);
Mat bluematting;
Mat result;

void on_Trackbar(int, void*)
{
	value_c = value;
	distance(bluematting, value_c);
	namedWindow("result", CV_WINDOW_NORMAL);
	imshow("result",result);
}
int main()
{
	bluematting = imread("1.jpg");
	result = Mat::zeros(bluematting.rows, bluematting.cols, CV_8UC1);
	namedWindow("result", 0);
	createTrackbar("阈值", "result", &value, value_max, on_Trackbar);
	imshow("result", bluematting);
	waitKey(0);
	return 0;
}
void distance(Mat bluematting, int value)
{   
	//Mat result = Mat::zeros(bluematting.rows, bluematting.cols, CV_8UC1);
	int b, g, r;
	double dis;
	int height = bluematting.rows;
	int width = bluematting.cols;
	for (int i = 0; i < height;i++){
		uchar *presult = result.ptr<uchar>(i);
		uchar *pbg = bluematting.ptr<uchar>(i);
		for (int j = 0; j < width; j++)
		{
			b = *pbg++;
			g = *pbg++;
			r = *pbg++;
			dis = sqrt(pow((b - 230), 2) + pow((g - 126), 2) + pow((r - 61), 2));
			if (dis <= value){
				*presult++ = 0;
			}
			else
			{
				*presult++ = dis;
			}
			//cout << dis <<"   ";
		}
	}
}
